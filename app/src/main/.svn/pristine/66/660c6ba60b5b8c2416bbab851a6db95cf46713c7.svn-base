package com.bing.lan.fm.ui.top;

import android.content.Intent;
import android.os.Bundle;
import android.support.v4.widget.SwipeRefreshLayout;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;

import com.bing.lan.comm.base.mvp.fragment.BaseFragment;
import com.bing.lan.comm.di.FragmentComponent;
import com.bing.lan.comm.utils.AppUtil;
import com.bing.lan.fm.R;
import com.bing.lan.fm.cons.Constants;
import com.bing.lan.fm.ui.top.adapter.TopAdapter;
import com.bing.lan.fm.ui.top.bean.DatasBean;
import com.bing.lan.fm.ui.top.bean.TopBean;
import com.youth.banner.Banner;
import com.zhy.adapter.recyclerview.MultiItemTypeAdapter;

import java.util.ArrayList;
import java.util.List;

import butterknife.BindView;

/**
 *
 */
public class TopFragment extends BaseFragment<ITopContract.ITopPresenter>
        implements ITopContract.ITopView, SwipeRefreshLayout.OnRefreshListener {

    @BindView(R.id.recyclerView)
    RecyclerView mTopRecyclerView;
    @BindView(R.id.refresh_container)
    SwipeRefreshLayout mTopRefreshContainer;

    private int bannerHeight;
    private int viewpageHeight;
    private View mBannerView;
    private Banner mBanner;
    private ArrayList<Object> mRecyclerViewData;
    private MultiItemTypeAdapter mAdapter;

    public static TopFragment newInstance(String title) {
        TopFragment fragment = new TopFragment();
        Bundle args = new Bundle();
        args.putString(Constants.FRAGMENT_TITLE, title);
        fragment.setArguments(args);
        return fragment;
    }

    @Override
    protected int getLayoutResId() {
        return R.layout.fragment_top;
    }

    @Override
    protected void startInject(FragmentComponent fragmentComponent) {
        fragmentComponent.inject(this);
    }

    //启动p层
    @Override
    protected void readyStartPresenter() {
        mPresenter.onStart();
    }

    @Override
    protected void initViewAndData(Intent intent, Bundle arguments) {
        mTopRefreshContainer.setOnRefreshListener(this);
        initHeight();
        initAdBanner();
        initRecyclerView();
    }

    @Override
    public void onRefresh() {
        mPresenter.reStartUpdate();
    }

    private void initHeight() {
        bannerHeight = AppUtil.dip2px(175);
        // bannerHeight = (int) (AppUtil.getScreenH() * 0.35f);
        viewpageHeight = (int) (AppUtil.getScreenW() * 0.7f + AppUtil.dip2px(20));
    }

    //广告图片
    private void initAdBanner() {
        ImageView imageView = new ImageView(AppUtil.getAppContext());
        ViewGroup.LayoutParams layoutParams = new RecyclerView.LayoutParams(
                ViewGroup.LayoutParams.MATCH_PARENT, bannerHeight);
        imageView.setLayoutParams(layoutParams);
        imageView.setScaleType(ImageView.ScaleType.FIT_XY);
//        imageView.setImageURI();
    }
    //  return            true;
    //下面的recycleView
    private void initRecyclerView() {
        LinearLayoutManager linearLayoutManager = new LinearLayoutManager(getContext());
        linearLayoutManager.setSmoothScrollbarEnabled(true);
        mTopRecyclerView.setLayoutManager(linearLayoutManager);

        mRecyclerViewData = new ArrayList<>();

        mAdapter = new MultiItemTypeAdapter<>(AppUtil.getAppContext(), mRecyclerViewData);
        mAdapter.addItemViewDelegate(new TopAdapter());
        mTopRecyclerView.setAdapter(mAdapter);
        mAdapter.notifyDataSetChanged();
    }

    //回调接口中方法
    @Override
    public void updataTop(TopBean data) {
        List<DatasBean> datas = data.getDatas();
        mRecyclerViewData.clear();
        mRecyclerViewData.addAll(datas);
        mAdapter.notifyDataSetChanged();
    }
}
