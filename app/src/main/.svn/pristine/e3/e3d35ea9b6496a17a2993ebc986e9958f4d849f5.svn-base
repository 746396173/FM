package com.bing.lan.fm.ui.home;

import android.content.Intent;
import android.os.Bundle;
import android.support.design.widget.TabLayout;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentStatePagerAdapter;
import android.support.v4.view.ViewPager;

import com.bing.lan.comm.base.mvp.fragment.BaseFragment;
import com.bing.lan.comm.base.mvp.fragment.SampleFragment;
import com.bing.lan.comm.di.FragmentComponent;
import com.bing.lan.comm.utils.AppUtil;
import com.bing.lan.fm.R;
import com.bing.lan.fm.cons.Constants;
import com.bing.lan.fm.ui.anchor.AnchorFragment;
import com.bing.lan.fm.ui.hot.HotFragment;
import com.bing.lan.fm.ui.recommend.RecommendFragment;
import com.bing.lan.fm.ui.top.TopFragment;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import butterknife.BindView;

public class HomeFragment extends BaseFragment<IHomeContract.IHomePresenter>
        implements IHomeContract.IHomeView {

    @BindView(R.id.tab_home)
    TabLayout mTabHome;
    @BindView(R.id.view_pager_home)
    ViewPager mViewPagerHome;
    private boolean isFirstIn = true;

    /**
     * Returns a new instance of this fragment for the given section
     * number.
     */
    public static HomeFragment newInstance(String title) {
        HomeFragment fragment = new HomeFragment();
        Bundle args = new Bundle();
        args.putString(Constants.FRAGMENT_TITLE, title);
        fragment.setArguments(args);
        fragment.setTitle(title);
        return fragment;
    }

    @Override
    protected int getLayoutResId() {
        return R.layout.fragment_home;
    }

    @Override
    protected void startInject(FragmentComponent fragmentComponent) {
        fragmentComponent.inject(this);
    }

    protected boolean isOpenLoadPager() {
        return false;
    }

    @Override
    protected void readyStartPresenter() {
        mPresenter.onStart();
    }

    @Override
    protected void initViewAndData(Intent intent, Bundle arguments) {
        //初始化推荐/热门/等fragment
        initFragment();
    }

    private void initFragment() {
        List<Fragment> fragments = new ArrayList<>();
        // SampleFragment introduceFragment = new SampleFragment();
        // introduceFragment.setAllowEnterTransitionOverlap(true);

        fragments.add(new RecommendFragment());
        fragments.add(new HotFragment());
        fragments.add(new AnchorFragment());
        fragments.add(new SampleFragment());
        fragments.add(new TopFragment());

        initTab(fragments);
    }

    private void initTab(final List<Fragment> fragments) {
        final List<String> titles = Arrays.asList(AppUtil.getStrArr(R.array.home_tab_title));
        mViewPagerHome.setAdapter(new FragmentStatePagerAdapter(getChildFragmentManager()) {
            @Override
            public Fragment getItem(int position) {
                return fragments.get(position);
            }

            @Override
            public int getCount() {
                return fragments.size();
            }

            @Override
            public CharSequence getPageTitle(int position) {
                return titles.get(position);
            }
        });

        mTabHome.setupWithViewPager(mViewPagerHome);
    }

    @Override
    public void onResume() {
        super.onResume();

        //模拟点击到热门页面
        if (isFirstIn) {
            TabLayout.Tab tabAt = mTabHome.getTabAt(1);
            if (tabAt != null && isFirstIn) {
                tabAt.select();
            }
            isFirstIn = false;
        }
    }

    public void updateSearchWord(String searchWord) {
        // mSearchWordTv.setText(searchWord);
    }
}

