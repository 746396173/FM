package com.bing.lan.fm.ui.top;

import android.content.Intent;
import android.os.Bundle;
import android.support.v4.widget.SwipeRefreshLayout;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;

import com.bing.lan.comm.base.mvp.fragment.BaseFragment;
import com.bing.lan.comm.di.FragmentComponent;
import com.bing.lan.comm.utils.AppUtil;
import com.bing.lan.fm.R;
import com.bing.lan.fm.cons.Constants;
import com.bing.lan.fm.ui.top.adapter.TopAdapter;
import com.bing.lan.fm.ui.top.bean.DatasBean;
import com.bing.lan.fm.ui.top.bean.FocusImagesBean;
import com.bing.lan.fm.ui.top.bean.ListBean;
import com.bing.lan.fm.ui.top.bean.TopBean;
import com.facebook.drawee.view.SimpleDraweeView;
import com.zhy.adapter.recyclerview.MultiItemTypeAdapter;
import com.zhy.adapter.recyclerview.wrapper.HeaderAndFooterWrapper;

import java.util.ArrayList;
import java.util.List;

import butterknife.BindView;

import static com.bing.lan.fm.R.id.iv_category_head_image;
import static com.bing.lan.fm.R.id.refresh_container;

/**
 *
 */
public class TopFragment extends BaseFragment<ITopContract.ITopPresenter>
        implements ITopContract.ITopView, SwipeRefreshLayout.OnRefreshListener {

    @BindView(R.id.recyclerView)
    RecyclerView mTopRecyclerView;
    @BindView(refresh_container)
    SwipeRefreshLayout mTopRefreshContainer;
    SimpleDraweeView mHeadImage;

    private int bannerHeight;
    private int viewpageHeight;
    private ArrayList<Object> mRecyclerViewData;
    private MultiItemTypeAdapter mMultiItemTypeAdapter;
    private HeaderAndFooterWrapper mHeaderAndFooterWrapper;
    private ImageView mImageView;
    private FocusImagesBean mImages;
    private List<ListBean> mList;
    private View mHeaderView;
    private ImageView mTworecyclerView;

    public static TopFragment newInstance(String title) {
        TopFragment fragment = new TopFragment();
        Bundle args = new Bundle();
        args.putString(Constants.FRAGMENT_TITLE, title);
        fragment.setArguments(args);
        return fragment;
    }

    @Override
    protected int getLayoutResId() {
        return R.layout.fragment_top;
    }

    @Override
    protected void startInject(FragmentComponent fragmentComponent) {
        fragmentComponent.inject(this);
    }

    //启动p层
    @Override
    protected void readyStartPresenter() {
        mTopRefreshContainer.setOnRefreshListener(this);
        mPresenter.onStart();
    }

    @Override
    protected void initViewAndData(Intent intent, Bundle arguments) {
        mTopRefreshContainer.setOnRefreshListener(this);
        initHeight();
        initRecyclerView();
    }

    /**
     * 重新刷新
     */
    @Override
    public void onRefresh() {
        mPresenter.reStartUpdate();
    }

    /**
     * 关闭刷新
     */
    public void closeRefreshing() {
        if (mTopRefreshContainer != null && mTopRefreshContainer.isRefreshing()) {
            mTopRefreshContainer.setRefreshing(false);
        }
    }

    private void initHeight() {
        bannerHeight = AppUtil.dip2px(175);
        // bannerHeight = (int) (AppUtil.getScreenH() * 0.35f);
        viewpageHeight = (int) (AppUtil.getScreenW() * 0.7f + AppUtil.dip2px(20));
    }

    //下面的recycleView
    private void initRecyclerView() {
        LinearLayoutManager linearLayoutManager = new LinearLayoutManager(getContext());
        linearLayoutManager.setSmoothScrollbarEnabled(true);
        mTopRecyclerView.setLayoutManager(linearLayoutManager);

        //空的集合,用来装载数据
        mRecyclerViewData = new ArrayList<>();

        //创建一个代理的对象
        mMultiItemTypeAdapter = new MultiItemTypeAdapter<>(AppUtil.getAppContext(), mRecyclerViewData);

        //添加adapter对象
        mMultiItemTypeAdapter.addItemViewDelegate(new TopAdapter());
        mHeaderAndFooterWrapper = new HeaderAndFooterWrapper(mMultiItemTypeAdapter);

        mHeaderAndFooterWrapper.addHeaderView(mImageView);

        mTopRecyclerView.setAdapter(mMultiItemTypeAdapter);
        mHeaderAndFooterWrapper.notifyDataSetChanged();
        setTopHeader();

    }

    private void setTopHeader() {
        //1.1通过一个打气筒创建一个view
        View mHeadView = mLayoutInflater.inflate(R.layout.top_item_head, null);
        //1.2设置宽和高
        int viewpageHeight = (int) (AppUtil.getScreenW() * 0.7f);
        ViewGroup.LayoutParams layoutParams = new ViewGroup.LayoutParams(
                ViewGroup.LayoutParams.MATCH_PARENT, viewpageHeight);
        mHeadView.setLayoutParams(layoutParams);
        //1.3定义数据
        mHeadImage = (SimpleDraweeView) mHeadView.findViewById(iv_category_head_image);
        mHeaderAndFooterWrapper = new HeaderAndFooterWrapper(mMultiItemTypeAdapter);
        mHeaderAndFooterWrapper.addHeaderView(mHeadView);
        mHeaderAndFooterWrapper.notifyDataSetChanged();
        mTopRecyclerView.setAdapter(mHeaderAndFooterWrapper);
    }

    //回调接口中方法
    @Override
    public void updataTop(TopBean data) {
        List<DatasBean> datas = data.getDatas();
        mRecyclerViewData.clear();
        mRecyclerViewData.addAll(datas);

        //获取到图片
        mImages = data.getFocusImages();
        mList = mImages.getList();
        mHeadImage.setImageURI(mList.get(0).getPic());
        mMultiItemTypeAdapter.notifyDataSetChanged();
        mHeaderAndFooterWrapper.notifyDataSetChanged();
    }
}
